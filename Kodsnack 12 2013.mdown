# Hemska UI-upplevelser #

* Någonting pöbeln får använda
* Bättre än Eclipse, absolut
* Jag tycker utvecklingsverktyg är intressant
* Man har inte flyttat fram pucken
* Kodsnuttar i bubblor
* Fria bubblor med kod
* Skriv det som en novell
* Jag har aldrig drabbats av UML-diagram
* Ett enkelt och smidigt sätt att navigera kod
* Skriva allting i en header
* Problemet med att strukturera kod
* Länka till head i ett utvecklingsträd
* En standard för dumma människor
* Man sätter sig i en kod man aldrig sett förut
* Det är svårt att läsa kod
* När det kommer in i händerna
* IDE:er är påtvingande
* En kodstil som inte passar med intellisense
* Trasig tills jag är färdig
* Jag kämpar mot IDE:t
* Skriver man koden bakvänt, som du gör
* En arg nazist som står bakom en och slår en på fingrarna direkt när man försöker skriva något
* Mitt IDE av valet
* Jag kan skriva min egen intellisense
* Till en viss gräns är syntax highlighting positivt
* Hoppa i koden är användbart
* Veta vad filnamnet heter
* Någonting som är trevligt med Emacs är att man kan stänga av allting
* Det ska vara så himla enkelt
* Jag tappar mina inställningar varje gång jag uppgraderar
* Gör fel saker för långsamt
* Kompilera om hela headerfilen hela tiden
* Det kan vara så att vi är olika
* Ett medelvärde som inte passar någon
* Det är väldigt modalt att skriva kod
* Debuggar applikationen baklänges
* Förmågan att simulera
* Dra tiden fram och tillbaka
* IDE:erna har förlorat mig redan
* Mycket mark att bryta i framtiden

Vi tar avstamp i Googles keynote på Google I/O och introduktionen av Android studio och snackar om vad vi gillar och … gillar mindre i integrerade utvecklingsmiljöer.

* [Google I/O-keynoten](https://developers.google.com/events/io/)
* [Android studio](http://developer.android.com/sdk/installing/studio.html)
* [IntelliJ community edition](http://www.jetbrains.com/idea/free_java_ide.html)
* [One laptop per child och dess mjukvarumiljö](http://one.laptop.org/about/software)
* [Bret Victor - Innovating on principle](http://vimeo.com/36579366)
* [Bret Victor - Stop drawing dead fish](http://worrydream.com/#!/StopDrawingDeadFish)
* [Bret Victor - Drawing dynamic visualizations](http://worrydream.com/#!/DrawingDynamicVisualizationsTalk)
* [Hackerfilmen Swordfish](http://www.imdb.com/title/tt0244244/?ref_=sr_1)
* [Code bubbles](http://www.andrewbragdon.com/codebubbles_site.asp)
* [Smalltalk](http://www.smalltalk.org/main/)
* [UML-diagram](http://en.wikipedia.org/wiki/Unified_Modeling_Language)
* [Go](http://www.golang.org)
* [Python](http://python.org)
* [Python-ägg](http://mrtopf.de/blog/en/a-small-introduction-to-python-eggs/)
* [Pypy](http://pypy.org)
* [Easy install för Python](http://peak.telecommunity.com/DevCenter/EasyInstall)
* [Linuxkärnans källkod](https://www.kernel.org)
* [QT creator](http://qt.digia.com/Product/Developer-Tools/)
* [Snippets](http://en.wikipedia.org/w/index.php?title=Code_snippets)
* [Emacs](http://www.gnu.org/software/emacs/)
* [Ctags](http://en.wikipedia.org/wiki/Ctags)
* [Vim](http://www.vim.org)
* [Distraktionsfritt läge i textredigerare](http://en.wikipedia.org/wiki/Full-screen_writing_program)
* [Light table](http://www.lighttable.com)
* [Reverse debugging i GDB](http://sourceware.org/gdb/news/reversible.html)
* [Valgrind](http://valgrind.org)
* [RAD game tools](http://www.radgametools.com)

* Clippy och Comic sans är framtiden
* Flera lager i lagerkakan
* Allt kommer att bli större
* Jag kör tretton punkter, så jag har gått upp
* Jag förstår inte hur någon av er lever utan snippets
* Jag har gått mot att minimera mängden kod jag skriver
* Jag har starka åsikter om allt

* [Menlo - typsnitt]()
* [Inconsolata - typsnitt]()
* [Bitstream - typsnitt]()
* [Monaco - typsnitt]()
* [Chocolat - textredigerare som växlar till Comic sans om man inte betalar]()
* [Rust]()